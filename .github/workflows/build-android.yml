
name: Rescue Build â€¢ Android APK (Sara Industries)

on:
  push: { branches: [ "main" ] }
  workflow_dispatch:

jobs:
  android:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # JDK aligned with current Android Gradle Plugin
      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: gradle

      # Stable Flutter toolchain
      - name: Set up Flutter (stable)
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      # If android/ or ios/ folders are missing, create them
      - name: Ensure android/ and ios/ exist
        run: |
          if [ ! -d "android" ] || [ ! -d "ios" ]; then
            flutter create --platforms=android,ios _tmpapp
            [ ! -d "android" ] && cp -r _tmpapp/android . || true
            [ ! -d "ios" ] && cp -r _tmpapp/ios . || true
          fi

      # Auto-patch common causes of red errors
      - name: Patch Android config (AndroidX, SDK, namespace, exported, memory)
        shell: bash
        run: |
          set -e

          # gradle.properties: AndroidX + memory
          mkdir -p android
          touch android/gradle.properties
          awk '1' android/gradle.properties > /tmp/gp || true
          cat > android/gradle.properties <<'EOF'
          android.useAndroidX=true
          android.enableJetifier=true
          org.gradle.jvmargs=-Xmx3072m -Dkotlin.daemon.jvm.options=-Xmx1024m
          kotlin.code.style=official
          EOF
          cat /tmp/gp >> android/gradle.properties || true

          APP_GRADLE="android/app/build.gradle"
          [ -f "$APP_GRADLE" ] || APP_GRADLE="android/app/build.gradle.kts"

          # SDK levels (min 21, compile/target 34)
          if [ -f "$APP_GRADLE" ]; then
            sed -i 's/minSdkVersion \([0-9]\+\)/minSdkVersion 21/g' "$APP_GRADLE" || true
            sed -i 's/compileSdkVersion \([0-9]\+\)/compileSdkVersion 34/g' "$APP_GRADLE" || true
            sed -i 's/targetSdkVersion \([0-9]\+\)/targetSdkVersion 34/g' "$APP_GRADLE" || true
          fi

          # Add namespace for AGP 8+ if missing
          if [ -f "android/app/build.gradle" ] && ! grep -q '^[[:space:]]*namespace[[:space:]]' android/app/build.gradle; then
            sed -i '0,/android {/s//android {\n    namespace "com.sara.gstapp"/' android/app/build.gradle || true
          fi

          # Android 12+: ensure exported="true" on MainActivity
          MANIFEST="android/app/src/main/AndroidManifest.xml"
          if [ -f "$MANIFEST" ]; then
            if grep -q 'android:name="\.MainActivity"' "$MANIFEST" && ! grep -q 'android:exported=' "$MANIFEST"; then
              sed -i 's|<activity android:name="\.MainActivity"|<activity android:name=".MainActivity" android:exported="true"|' "$MANIFEST"
            fi
            if grep -q 'io.flutter.embedding.android.FlutterActivity' "$MANIFEST" && ! grep -q 'android:exported=' "$MANIFEST"; then
              sed -i 's|io.flutter.embedding.android.FlutterActivity"|io.flutter.embedding.android.FlutterActivity" android:exported="true"|' "$MANIFEST"
            fi
          fi

          # If the Gradle wrapper is too old, bump it (safe default)
          if [ -f "android/gradle/wrapper/gradle-wrapper.properties" ]; then
            if ! grep -q "distributionUrl=.*/gradle-8" android/gradle/wrapper/gradle-wrapper.properties; then
              sed -i 's#distributionUrl=.*#distributionUrl=https\\://services.gradle.org/distributions/gradle-8.7-all.zip#' android/gradle/wrapper/gradle-wrapper.properties || true
            fi
          fi

      - name: Flutter pub get
        run: flutter pub get

      - name: Flutter doctor (diagnostics)
        run: flutter doctor -v

      - name: Build release APK
        run: flutter build apk --release --no-tree-shake-icons

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: build/app/outputs/flutter-apk/app-release.apk
